# Generated from MapaTesoro.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,11,113,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,1,0,1,0,1,0,1,0,1,0,1,
        0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
        1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
        5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,5,7,90,8,7,10,
        7,12,7,93,9,7,1,7,1,7,1,8,4,8,98,8,8,11,8,12,8,99,1,9,4,9,103,8,
        9,11,9,12,9,104,1,10,4,10,108,8,10,11,10,12,10,109,1,10,1,10,0,0,
        11,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,1,0,4,3,0,
        10,10,13,13,34,34,1,0,48,57,2,0,10,10,13,13,2,0,9,9,32,32,116,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,1,23,1,0,0,0,3,37,1,0,0,0,5,45,1,0,0,0,7,54,1,0,0,0,9,60,1,
        0,0,0,11,67,1,0,0,0,13,85,1,0,0,0,15,87,1,0,0,0,17,97,1,0,0,0,19,
        102,1,0,0,0,21,107,1,0,0,0,23,24,5,69,0,0,24,25,5,108,0,0,25,26,
        5,32,0,0,26,27,5,109,0,0,27,28,5,97,0,0,28,29,5,112,0,0,29,30,5,
        97,0,0,30,31,5,32,0,0,31,32,5,116,0,0,32,33,5,105,0,0,33,34,5,101,
        0,0,34,35,5,110,0,0,35,36,5,101,0,0,36,2,1,0,0,0,37,38,5,102,0,0,
        38,39,5,105,0,0,39,40,5,108,0,0,40,41,5,97,0,0,41,42,5,115,0,0,42,
        43,5,32,0,0,43,44,5,121,0,0,44,4,1,0,0,0,45,46,5,99,0,0,46,47,5,
        111,0,0,47,48,5,108,0,0,48,49,5,117,0,0,49,50,5,109,0,0,50,51,5,
        110,0,0,51,52,5,97,0,0,52,53,5,115,0,0,53,6,1,0,0,0,54,55,5,116,
        0,0,55,56,5,101,0,0,56,57,5,32,0,0,57,58,5,100,0,0,58,59,5,97,0,
        0,59,8,1,0,0,0,60,61,5,112,0,0,61,62,5,117,0,0,62,63,5,110,0,0,63,
        64,5,116,0,0,64,65,5,111,0,0,65,66,5,115,0,0,66,10,1,0,0,0,67,68,
        5,101,0,0,68,69,5,115,0,0,69,70,5,116,0,0,70,71,5,225,0,0,71,72,
        5,32,0,0,72,73,5,101,0,0,73,74,5,110,0,0,74,75,5,116,0,0,75,76,5,
        101,0,0,76,77,5,114,0,0,77,78,5,114,0,0,78,79,5,97,0,0,79,80,5,100,
        0,0,80,81,5,111,0,0,81,82,5,32,0,0,82,83,5,101,0,0,83,84,5,110,0,
        0,84,12,1,0,0,0,85,86,5,44,0,0,86,14,1,0,0,0,87,91,5,34,0,0,88,90,
        8,0,0,0,89,88,1,0,0,0,90,93,1,0,0,0,91,89,1,0,0,0,91,92,1,0,0,0,
        92,94,1,0,0,0,93,91,1,0,0,0,94,95,5,34,0,0,95,16,1,0,0,0,96,98,7,
        1,0,0,97,96,1,0,0,0,98,99,1,0,0,0,99,97,1,0,0,0,99,100,1,0,0,0,100,
        18,1,0,0,0,101,103,7,2,0,0,102,101,1,0,0,0,103,104,1,0,0,0,104,102,
        1,0,0,0,104,105,1,0,0,0,105,20,1,0,0,0,106,108,7,3,0,0,107,106,1,
        0,0,0,108,109,1,0,0,0,109,107,1,0,0,0,109,110,1,0,0,0,110,111,1,
        0,0,0,111,112,6,10,0,0,112,22,1,0,0,0,5,0,91,99,104,109,1,6,0,0
    ]

class MapaTesoroLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    STRING = 8
    NUMBER = 9
    NEWLINE = 10
    WS = 11

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'El mapa tiene'", "'filas y'", "'columnas'", "'te da'", "'puntos'", 
            "'est\\u00E1 enterrado en'", "','" ]

    symbolicNames = [ "<INVALID>",
            "STRING", "NUMBER", "NEWLINE", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "STRING", "NUMBER", "NEWLINE", "WS" ]

    grammarFileName = "MapaTesoro.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


